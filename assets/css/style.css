:root {
    --board-bg: #ffffff;
    --color-present: #c9b458;
    --color-correct: #6aaa64;
    --color-absent: #787c7e;
    --tile-text-color: #000000;
    --tile-border-color: #d3d6da;
    --tile-active-text-color: #FFFFFF;
    --tile-active-border-color: #878a8c;
    --key-text-color: #000000;
    --key-evaluated-text-color: #ffffff;
    --key-bg: #d3d6da;
}

@media	(prefers-color-scheme: dark){
	:root{
        --board-bg: #121213;
        --color-present: #b59f3b;
        --color-correct: #538d4e;
        --color-absent: #3a3a3c;
        --tile-text-color: #ffffff;
        --tile-border-color: #3a3a3c;
        --tile-active-border-color: #565758;
        --key-text-color: #ffffff;
        --key-bg: #818384;
    }
}

*, *::before, *::after{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body{
    background-color: var(--board-bg);
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 100vh;
    margin: 0;
    padding: 0.5em;
    font-family: 'Clear Sans', 'Helvetica Neue', Arial, sans-serif;
    overflow-y: hidden;
    /* font-size: clamp(.5rem, 2.5vmin, 1.5rem); */
}

/* -------------- HEADER -------------- */

header{
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: nowrap;
    /* height: var(--header-height); */
    color: var(--tile-text-color);
    border-bottom: 1px solid var(--tile-border-color);
}

.title{
    font-size: 1.8em;
    font-weight: bold;
    text-transform: uppercase;
    padding-bottom: .1em;
}

/* -------------- GAME BOARD -------------- */

.game-board{
    display: grid;
    align-content: center;
    grid-template-columns: repeat(5, 3.5em);
    grid-template-rows: repeat(6, 3.5em);
    flex-grow: 1;
    gap: .35em;
    padding: 1.5em 0;
}

.tile{
    height: 100%;
    color: var(--tile-text-color);
    display: inline-flex;
    justify-content: center;
    align-items: center;
    font-size: 2em;
    font-weight: bold;
    text-transform: uppercase;
    border-radius: 0.1em;
    /* transition: transform 250ms; */
    user-select: none;
}

.tile:not([data-state]) {
    border: 0.08em solid var(--tile-border-color);
}

.tile[data-state='active'] {
    border: 0.08em solid var(--tile-active-border-color);
    /* animation-name: PopIn;
    animation-duration: 100ms; */
}

.tile[data-state='correct'] {
    background-color: var(--color-correct);
    color: var(--tile-active-text-color);
}

.tile[data-state='present'] {
    background-color: var(--color-present);
    color: var(--tile-active-text-color);
}
.tile[data-state='absent'] {
    background-color: var(--color-absent);
    color: var(--tile-active-text-color);
}

.tile[data-animation='pop'] {
    animation-name: PopIn;
    animation-duration: 100ms;
}

.tile[data-animation='shake'] {
    animation-name: Shake;
    animation-duration: 600ms;
}

.tile[data-animation='bounce'] {
    animation-name: Bounce;
    animation-duration: 1000ms;
}

.tile[data-animation='flip'] {
    animation-name: Flip;
    animation-duration: 500ms;
    animation-timing-function: ease-in-out;
}

.tile[data-animation='flip-in'] {
    animation-name: FlipIn;
    animation-duration: 250ms;
    animation-timing-function: ease-in;
}

.tile[data-animation='flip-out'] {
    animation-name: FlipOut;
    animation-duration: 250ms;
    animation-timing-function: ease-in;
}


/* -------------- KEYBOARD -------------- */

.keyboard{
    display: grid;
    grid-template-columns: repeat(20, minmax(auto, 1.1em));
    grid-auto-rows: 3.25em;
    gap: .4em;
}

.key{
    font-size: clamp(.2rem, 2vmin, 1rem);
    grid-column: span 2;
    border: .25em;
    border-radius: .25em;
    padding: 3px 0;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: var(--key-bg);
    color: var(--key-text-color);
    fill: var(--key-text-color);
    text-transform: uppercase;
    font-weight: bold;
    cursor: pointer;
    user-select: none;
    transition: .1s;
}

.key.large{
    grid-column: span 3;
}

.key > svg{
    width: 1.75em;
    height: 1.75em;
    pointer-events: none;
}

.key.absent{
    background-color: var(--color-absent);
    color: var(--key-evaluated-text-color);
}

.key.present{
    background-color: var(--color-present);
    color: var(--key-evaluated-text-color);
}

.key.correct{
    background-color: var(--color-correct);
    color: var(--key-evaluated-text-color);
}

.key:hover, .key:active{
    outline: #121213;
    transform: scale(1.1);
}